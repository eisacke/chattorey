.grid
  margin-right: auto
  margin-left: auto
  max-width: $width-site-max
  padding-left: $gtr !important
  padding-right: $gtr !important

.row
  width: auto
  margin-right: - $gtr
  margin-left: - $gtr
  display: flex
  flex-wrap: wrap

.row:before,
.row:after
  content: ''
  display: table

$sizes = 'lrg', 'med', 'sml'
$values = {'lrg': $lrg, 'med': $med, 'sml': $sml}

// Individual column CSS

individual-column($column-index, $grid-count, $size)
  if $size != ""
    $size = $size + "-"
  $width = (1/$grid-count) * $column-index * 100%

  .grid .{$size}c{$column-index}
    column-css()
    width: $width

  .grid .{$size}s{$column-index}
    column-css()
    margin-left: $width

// Css added to columns c1..c12

column-css()
  position: relative
  float: left
  padding-left:  $gtr
  padding-right: $gtr
  min-height: 1px

// Generate columns

columns($grid-count)
  for $i in (1..$grid-count)
    individual-column($i, $grid-count, "")

  // Responsive non-standard grid. (e.g. med-ten-c4, sml-nine-c2)
  for $size in $sizes
    $size-value = $values[$size]
    +below($size-value)
      for $i in (0..$grid-count)
        individual-column($i, $grid-count, $size)

// Init chosen grid (12 is standard - can have more than one).

columns(12)

$rules = {
  text-center: { // @stylint ignore
    text-align: center
  },
  text-left: { // @stylint ignore
    text-align: left
  },
  text-right: { // @stylint ignore
    text-align: right
  },
  full-width: { // @stylint ignore
    width: 100%
  },
  pull-right: { // @stylint ignore
    float: right
  },
  pull-left: { // @stylint ignore
    float: left
  },
  pad-horizontal: { // @stylint ignore
    padding-left: $gtr,
    padding-right: $gtr
  },
  pad-vertical: { // @stylint ignore
    padding-top: $gtr,
    padding-bottom: $gtr
  },
  double-pad-vertical: { // @stylint ignore
    padding-top: 2 * $gtr,
    padding-bottom: 2 * $gtr
  },
  double-pad-horizontal: { // @stylint ignore
    padding-left: 2 * $gtr,
    padding-right: 2 * $gtr
  },
  pad-top: { // @stylint ignore
    padding-top: $gtr
  },
  pad-bottom: { // @stylint ignore
    padding-bottom: $gtr
  },
  pad-left: { // @stylint ignore
    padding-left: $gtr
  },
  pad-right: { // @stylint ignore
    padding-right: $gtr
  },
  double-pad-top: { // @stylint ignore
    padding-top: 2 * $gtr
  },
  double-pad-bottom: { // @stylint ignore
    padding-bottom: 2 * $gtr
  },
  double-pad-left: { // @stylint ignore
    padding-left: 2 * $gtr
  },
  double-pad-right: { // @stylint ignore
    padding-right: 2 * $gtr
  },
  no-pad: { // @stylint ignore
    padding: 0
  },
  push-top: { // @stylint ignore
    margin-top: $gtr
  },
  push-bottom: { // @stylint ignore
    margin-bottom: $gtr
  },
  push-left: { // @stylint ignore
    margin-left: $gtr
  },
  push-right: { // @stylint ignore
    margin-right: $gtr
  },
  half-push-top: { // @stylint ignore
    margin-top: .5 * $gtr
  },
  half-push-bottom: { // @stylint ignore
    margin-bottom: .5 * $gtr
  },
  half-push-left: { // @stylint ignore
    margin-left: .5 * $gtr
  },
  half-push-right: { // @stylint ignore
    margin-right: .5 * $gtr
  },
  double-push-top: { // @stylint ignore
    margin-top: 2 * $gtr
  },
  double-push-bottom: { // @stylint ignore
    margin-bottom: 2 * $gtr
  },
  double-push-left: { // @stylint ignore
    margin-left: 2 * $gtr
  },
  double-push-right: { // @stylint ignore
    margin-right: 2 * $gtr
  },
  triple-push-top: { // @stylint ignore
    margin-top: 3 * $gtr
  },
  triple-push-bottom: { // @stylint ignore
    margin-bottom: 3 * $gtr
  },
  no-push: { // @stylint ignore
    margin: 0 !important
  },
  hide: { // @stylint ignore
    display: none !important
  },
  show: { // @stylint ignore
    display: block !important
  },
  flex-reverse: {
    flex-direction: row-reverse
    justify-content: flex-end
  }
}

// Responsive and non-responsive Rules (e.g med-no-pad, pad, etc.)

for key, rules in $rules
  .{key}
    {rules}

for $size in $sizes
  $size-value = $values[$size]
  for key, rules in $rules
    .{$size}-{key}
      +below($size-value)
        {rules} // @stylint ignore
